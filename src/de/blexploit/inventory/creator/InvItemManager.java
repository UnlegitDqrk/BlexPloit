package de.blexploit.inventory.creator;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.List;

import api.ClassFinder;
import de.blexploit.inventory.items.RegCmd;

public final class InvItemManager {

	public static ArrayList<InvItem> invitems = new ArrayList<InvItem>();

	public void register(InvItem ii) {
		InvItemManager.invitems.add(ii);
	}

	@SuppressWarnings("deprecation")
	public void init() {
		List<Class<?>> classes;
		ArrayList<InvItem> aitems = new ArrayList<InvItem>();
		List<String> displaynames = new ArrayList<String>();
		try {
			classes = ClassFinder.getClassesInSamePackage(RegCmd.class);
			for (Class<?> c : classes) {
				Type intfs = c.getGenericSuperclass();
				if (intfs.equals(InvItem.class)) {
					@SuppressWarnings("unchecked")
					Class<InvItem> ii = (Class<InvItem>) c;
					InvItem iv = ii.newInstance();
					aitems.add(iv);
					displaynames.add(iv.getDisplayname());
				}
			}
			java.util.Collections.sort(displaynames);
			for (String s : displaynames) {
				for (InvItem inv : aitems) {
					if (s.equals(inv.getDisplayname())) {
						this.register(inv);
					}
				}
			}
		} catch (ClassNotFoundException e) {
		} catch (InstantiationException e) {
		} catch (IllegalAccessException e) {
		} catch (Exception e) {
		}

	}

}
