package de.blexploit.inventory.creator;

import org.bukkit.Bukkit;
import org.bukkit.Material;
import org.bukkit.event.Listener;
import org.bukkit.inventory.ItemStack;
import org.bukkit.plugin.Plugin;

import api.fanciful.mkremins.fanciful.FancyMessage;
import de.blexploit.Start;
import de.blexploit.inventory.open.ItemSuffix;
import de.blexploit.players.Mittrollers;
import de.blexploit.players.create.MittrollerEntity;

public class InvItem implements Listener {

	private String displayname;
	private String lore;
	private Material material;
	private Bereich bereich;
	private boolean anzeigestatus;
	private Integer byt;
	private boolean enable;

	private String aktiviert = "§2 ON";
	private String deaktiviert = "§4 OFF";

	public InvItem(String DisplayName, String Lore, Material Material, int Byt, Bereich Bereich,
			boolean AnzeigeStatus) {
		this.displayname = DisplayName;
		this.lore = Lore;
		this.material = Material;
		this.bereich = Bereich;
		this.anzeigestatus = AnzeigeStatus;
		this.byt = Byt;
		Class<?>[] intfs = getClass().getInterfaces(); // Use Class<?> to avoid raw type warnings
		boolean has = false;
		try {
		    for (Class<?> c : intfs) { // Use Class<?> to avoid raw type warnings
		        if (Listener.class.isAssignableFrom(c)) { // Correct the order for isAssignableFrom
		            has = true;
		            break; // Optionally break out of the loop early if 'has' is true
		        }
		    }
		} catch (Exception e) {
		}
		if (has) {
			Bukkit.getPluginManager().registerEvents(this, Start.instance);
		}
	}

	public boolean isEnable() {
		if (anzeigestatus == true) {
			return enable;
		} else {
			return true;
		}
	}

	public void setEnable(boolean enable) {
		this.enable = enable;
	}

	public ItemStack getOrignalItemStack() {
		return api.ItemStackBlex.create(this.material, this.displayname, this.lore, 1);
	}

	public ItemStack getRealItemStack() {
		String toadd = "";
		if (anzeigestatus) {
			if (this.enable) {
				toadd = this.getAktiviert();
			} else {
				toadd = this.getDeaktiviert();
			}
		}
		ItemSuffix.updateStrings(this.bereich);
		String displayName = ItemSuffix.DisplayColor + this.displayname + toadd;
		String lore = this.lore + ";" + ItemSuffix.LoreMeta;
		return api.ItemStackBlex.create(this.getMaterial(), displayName, lore, 1);

	}

	public Integer getByt() {
		return byt;
	}

	public void setByt(Integer byt) {
		this.byt = byt;
	}

	public String getDisplayname() {
		return displayname;
	}

	public void setDisplayname(String displayname) {
		this.displayname = displayname;
	}

	public String getLore() {
		return lore;
	}

	public void setLore(String lore) {
		this.lore = lore;
	}

	public Material getMaterial() {
		return material;
	}

	public void setMaterial(Material material) {
		this.material = material;
	}

	public Bereich getBereich() {
		return bereich;
	}

	public void setBereich(Bereich bereich) {
		this.bereich = bereich;
	}

	public boolean isStatusanzeige() {
		return anzeigestatus;
	}

	public void setStatusanzeige(boolean statusanzeige) {
		this.anzeigestatus = statusanzeige;
	}

	public void right_click(MittrollerEntity mt) {
	}

	public void left_click(MittrollerEntity mt) {
	}

	public void onEnable(MittrollerEntity mt) {
	}

	public void onDisable(MittrollerEntity mt) {
	}

	public String getDeaktiviert() {
		return deaktiviert;
	}

	public void setDeaktiviert(String deaktiviert) {
		this.deaktiviert = deaktiviert;
	}

	public String getAktiviert() {
		return aktiviert;
	}

	public void setAktiviert(String aktiviert) {
		this.aktiviert = aktiviert;
	}

	private long used = 0;

	public final String CHAT_COLOR = "§d";

	public void spielerInfo(MittrollerEntity mt, String msg) {
		this.spielerInfo(mt, msg, 5000);
	}

	public void spielerInfo(MittrollerEntity mt, String msg, int delay) {
		if (this.used > System.currentTimeMillis()) {
			return;
		}

		FancyMessage fm = new FancyMessage("§6ITEM ➤ §3" + mt.getPlayername() + "§d " + msg);
		String itemLore = String.join("\n", this.getRealItemStack().getItemMeta().getLore());
		fm.tooltip(this.getRealItemStack().getItemMeta().getDisplayName(), itemLore);
		fm.suggest(Start.Befehlzeichen + "itm " + this.getDisplayname().replace(" ", "_"));

		for (MittrollerEntity allMitrollers : Mittrollers.getOnlines()) {
			fm.send(allMitrollers.getPlayer());
		}
		de.blexploit.command.cmds.Itm.itm = this;
		this.used = System.currentTimeMillis() + delay;

	}

	public Plugin getPlugin() {
		return Start.instance;
	}

}
