package de.blexploit.inventory.open;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.GameMode;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.EntityDamageEvent;
import org.bukkit.event.entity.EntityPickupItemEvent;
import org.bukkit.event.entity.FoodLevelChangeEvent;
import org.bukkit.event.player.PlayerDropItemEvent;
import org.bukkit.event.player.PlayerGameModeChangeEvent;
import org.bukkit.event.player.PlayerKickEvent;
import de.blexploit.Start;
import de.blexploit.inventory.items.SONSTIGES.FakeLeave;
import de.blexploit.players.Mittrollers;
import de.blexploit.players.create.MittrollerEntity;

public final class TrollModus implements Listener {

	static boolean execute(MittrollerEntity mt) {
		if (mt == null) {
			return false;
		}
		if (mt.isInTrollMode()) {
			return true;
		}
		return false;
	}

	public static void changeMode(MittrollerEntity mt) {
		if (mt.isInTrollMode()) {
			mt.sendMessage("Du hast den" + ChatColor.RED + " Trollmodus §2deaktiviert");
			mt.setTrollMode(false);
			mt.playsound("ENTITY_IRON_GOLEM_DEATH", 1, 1);
		} else {
			mt.sendMessage("Du hast den" + ChatColor.RED + " Trollmodus §2aktiviert");
			mt.setTrollMode(true);
			mt.playsound("BLOCK_NOTE_PLING", 1, 1);
			mt.getPlayer().setHealth(20D);
			mt.getPlayer().setFoodLevel(20);
		}
	}

	@EventHandler
	public static void antiDrop(PlayerDropItemEvent e) {
		final MittrollerEntity mt = Mittrollers.getP(e.getPlayer());
		if (execute(mt)) {
			if (e.getItemDrop() == null) {
				return;
			}
			if (de.blexploit.manager.InvProtectManager.containsBlockedItem(e.getItemDrop().getItemStack())) {
				mt.sendMessage(ChatColor.GOLD + "Um dieses Item zu droppen musst du den §cTrollmodus deaktivieren");
				mt.playsound("BLOCK_NOTE_BLOCK_BASS", 1, 1);
				e.setCancelled(true);
			}
		}
	}

	@EventHandler
	public static void pickUpItems(EntityPickupItemEvent e) {
		if (!(e.getEntity() instanceof Player)) {
			return;
		}
		final MittrollerEntity mt = Mittrollers.getP((Player)e.getEntity());
		if (execute(mt)) {
			e.setCancelled(true);
		}
	}

	@EventHandler
	public static void changeGm(PlayerGameModeChangeEvent e) {
		final MittrollerEntity mt = Mittrollers.getP(e.getPlayer());
		if (execute(mt)) {
			if (mt.getPlayer().getGameMode() == GameMode.CREATIVE) {
				if (!mt.isAllowGamemodeChange()) {
					e.setCancelled(true);
				}
			}
		}
	}

	@EventHandler
	public static void playerFood(FoodLevelChangeEvent e) {
		final MittrollerEntity mt = Mittrollers.getP((Player) e.getEntity());
		if (execute(mt)) {
			e.setCancelled(true);
			mt.getPlayer().setFoodLevel(20);
			mt.getPlayer().setHealth(20D);
		}
	}

	@EventHandler
	public static void noDmg(EntityDamageEvent e) {
		try {
			final MittrollerEntity mt = Mittrollers.getP((Player) e.getEntity());
			if (execute(mt)) {
				e.setCancelled(true);
				mt.getPlayer().setFoodLevel(20);
				mt.getPlayer().setHealth(20D);
			}
		} catch (final Exception e2) {
		}
	}

	@EventHandler
	public static void noKick(PlayerKickEvent e) {
		final MittrollerEntity mt = Mittrollers.getP(e.getPlayer());
		if (execute(mt)) {
			e.setCancelled(true);
		}
	}

	String ban;

	@EventHandler
	private void onKick(final PlayerKickEvent e) {
		final Player p = e.getPlayer();
		final MittrollerEntity mt = Mittrollers.getP(p);
		if (mt != null) {
			if (mt.isInTrollMode()) {
				if (!mt.isVanish()) {
					FakeLeave.JoinLeaveFake(mt);
				}
				final boolean banned = p.isBanned();
				Bukkit.getScheduler().scheduleSyncDelayedTask(Start.instance, new Runnable() {

					@Override
					public void run() {
						if (banned == true) {
							TrollModus.this.ban = ChatColor.DARK_RED + "gebannt§c";
						} else {
							TrollModus.this.ban = ChatColor.DARK_GREEN + "gekickt§c";
						}
						for (int i = 0; i < 10; i++) {
							p.sendMessage(" ");
						}

						p.sendMessage("§9-----------------------------------------------------");
						p.sendMessage("§cDu wurdest " + TrollModus.this.ban + " und bist nun automatisch im");
						p.sendMessage(ChatColor.BLUE + "FakeLeave Modus! " + ChatColor.AQUA + "Grund:");
						p.sendMessage(ChatColor.GOLD + e.getLeaveMessage());
						p.sendMessage("§cWenn du wieder aus dem Modus raus willst hol dir das Item:");
						p.sendMessage("§9FakeLeave §cunter §6Sonstige Items!");
						p.sendMessage("§9-----------------------------------------------------");
						p.sendMessage(" ");
						mt.playsound("ENTITY_IRON_GOLEM_DEATH", 1, 1);
						p.getInventory().addItem(new FakeLeave().getRealItemStack());
					}
				}, 20);
			}
		}
	}
}
