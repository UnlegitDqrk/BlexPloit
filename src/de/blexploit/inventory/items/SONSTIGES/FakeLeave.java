package de.blexploit.inventory.items.SONSTIGES;

import java.util.ArrayList;

import org.bukkit.Bukkit;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerChatTabCompleteEvent;
import org.bukkit.event.player.PlayerCommandPreprocessEvent;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.event.player.PlayerQuitEvent;
import org.bukkit.inventory.ItemStack;

import de.blexploit.Start;
import de.blexploit.inventory.creator.Bereich;
import de.blexploit.inventory.creator.InvItem;
import de.blexploit.players.Mittrollers;
import de.blexploit.players.create.MittrollerEntity;

public final class FakeLeave extends InvItem implements Listener {
	public static String QuitMessage = "§e%P% left the game.";
	public static String JoinMessage = "§e%P% joined the game.";

	public static String standartQuitMessage = "§e%P% left the game.";
	public static String standartJoinMessage = "§e%P% joined the game.";

	private static FakeLeave instance = new FakeLeave();

	public FakeLeave() {
		super("Fake leave",
				"Tue so, also ob du den Server verlassen hast;§cDu bist in diesem Modus für alle außer Mittroller unsichtbar!",
				Material.ENDER_PORTAL_FRAME, 0, Bereich.SONSTIGES, false);
	}

	@Override
	public void right_click(MittrollerEntity mt) {
		JoinLeaveFake(mt);
	}

	public static void JoinLeaveFake(MittrollerEntity mt) {
		if (mt.isVanish()) {
			showMittroller(mt);
			api.Send.OnlinePlayersMsg(JoinMessage.replace("%P%", mt.getPlayername()));
			instance.spielerInfo(mt, "ist nun wieder sichtbar!", 0);
		} else {
			hideMittroller(mt);
			api.Send.OnlinePlayersMsg(QuitMessage.replace("%P%", mt.getPlayername()));
			instance.spielerInfo(mt, "ist nun unsichtbar!", 0);
		}
	}

	public static void hideMittroller(final MittrollerEntity mt) {
		for (final Player all : Bukkit.getOnlinePlayers()) {
			if (!Mittrollers.containsP(all)) {
				all.hidePlayer(mt.getPlayer());
			}
		}
		mt.setVanish(true);
		Bukkit.getScheduler().scheduleSyncDelayedTask(Start.instance, new Runnable() {
			@Override
			public void run() {
				mt.getPlayer().setPlayerListName("§9[V] " + mt.getPlayername());

			}
		}, 20);
	}

	public static void showMittroller(MittrollerEntity mt) {

		for (final Player all : Bukkit.getOnlinePlayers()) {
			all.showPlayer(mt.getPlayer());
		}
		mt.setVanish(false);
		mt.getPlayer().setPlayerListName(mt.getPlayername());
	}

	private void sendBannMsg(MittrollerEntity mt) {
		final Player p = mt.getPlayer();
		final ItemStack fkIs = this.getRealItemStack();
		Bukkit.getScheduler().scheduleSyncDelayedTask(Start.instance, new Runnable() {

			@Override
			public void run() {
				for (int i = 0; i < 10; i++) {
					p.sendMessage(" ");
				}

				p.sendMessage("§9-----------------------------------------------------");
				p.sendMessage("§cDu bist gebannt und bist nun automatisch im");
				p.sendMessage("§4FakeLeave Modus");
				p.sendMessage("");
				p.sendMessage("§cWenn du wieder aus dem Modus raus willst, hol dir das Item:");
				p.sendMessage("§9FakeLeave §cunter §6Sonstige Items!");
				p.sendMessage("§9-----------------------------------------------------");
				p.sendMessage(" ");
				api.Send.PlayerSound(p.getLocation(), "ENTITY_IRONGOLEM_DEATH", 1, 1, p);
				p.getInventory().setItem(0, fkIs);
			}
		}, 20);
	}

	@EventHandler
	private void OnJoin(PlayerJoinEvent e) {
		final MittrollerEntity mt = Mittrollers.getP(e.getPlayer());
		if (mt != null) {
			if (mt.isVanish() || e.getPlayer().isBanned()) {
				e.setJoinMessage(null);
				hideMittroller(mt);
				if (e.getPlayer().isBanned()) {
					this.sendBannMsg(mt);
				}
			}
		} else {
			for (final MittrollerEntity mt2 : Mittrollers.getOnlines()) {
				if (mt2.isVanish()) {
					e.getPlayer().hidePlayer(mt2.getPlayer());
				}
			}
		}
	}

	@EventHandler
	private void OnQuit(PlayerQuitEvent e) {
		final MittrollerEntity mt = Mittrollers.getP(e.getPlayer());
		if (mt != null) {
			if (mt.isVanish() || e.getPlayer().isBanned()) {
				e.setQuitMessage(null);
			}
		}
	}

	@EventHandler
	private void blockCommand(PlayerCommandPreprocessEvent e) {
		if (!Mittrollers.containsP(e.getPlayer())) {
			final ArrayList<Player> vanishPlayer = new ArrayList<Player>();
			for (final MittrollerEntity mt : Mittrollers.getOnlines()) {
				if (mt.isVanish()) {
					vanishPlayer.add(mt.getPlayer());
				}
			}
			if (vanishPlayer.size() != 0) {
				boolean block = false;
				final String args[] = e.getMessage().split(" ");
				if (args.length > 0) {
					String newCommand = "";
					for (int i = 0; i < args.length; i++) {
						if (i == 0) {
							newCommand = args[0];
						} else {
							String toAddCommand = args[i];
							final String s = args[i];
							final Player testetP = Bukkit.getPlayer(s);
							if (testetP != null) {
								if (testetP.isOnline()) {
									if (vanishPlayer.contains(testetP)) {
										block = true;
										toAddCommand = "." + args[i];
									}
								}
							}
							newCommand = newCommand + " " + toAddCommand;
						}
					}
					if (block) {
						e.setMessage(newCommand);
					}
				}
			}
		}
	}

	@EventHandler
	private void blockAutoTab(PlayerChatTabCompleteEvent e) {
		if (!Mittrollers.containsP(e.getPlayer())) {
			final ArrayList<String> vanishPlayer = new ArrayList<String>();
			for (final MittrollerEntity mt : Mittrollers.getOnlines()) {
				if (mt.isVanish()) {
					vanishPlayer.add(mt.getPlayer().getName());
				}
			}
			if (vanishPlayer.size() > 0) {
				e.getTabCompletions().clear();
				for (final String s : e.getTabCompletions()) {
					if (!vanishPlayer.contains(s)) {
						e.getTabCompletions().add(s);
					}
				}
			}
		}
	}

}
