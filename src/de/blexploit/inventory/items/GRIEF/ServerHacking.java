package de.blexploit.inventory.items.GRIEF;

import java.util.Random;

import org.bukkit.Bukkit;
import org.bukkit.GameMode;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.entity.TNTPrimed;
import org.bukkit.plugin.Plugin;
import org.bukkit.potion.PotionEffect;
import org.bukkit.potion.PotionEffectType;
import org.bukkit.util.Vector;

import de.blexploit.Start;
import de.blexploit.inventory.creator.Bereich;
import de.blexploit.inventory.creator.InvItem;
import de.blexploit.players.create.MittrollerEntity;

public final class ServerHacking extends InvItem {

	private boolean Hacking = false;
	private final Plugin plugin = Start.instance;
	private int hackingprozess = 0;
	private int hack1;
	private int hack2;
	private int hack3;

	public ServerHacking() {
		super("ServerHacking", "Es sieht so aus als würde dein Server gehackt!", Material.BOOK, 0,
				Bereich.GRIEFING, false);
	}

	@Override
	public void right_click(MittrollerEntity mt) {
		if (Hacking == true) {
			mt.sendMessage("§eBitte wachte bis es fertig ist, dann kannst du ein neues Beginnen");
			return;
		}
		this.spielerInfo(mt, "hackt nun den Server!");

		Hacking = true;

		Zoomspam();
		hackcounter();
		tntexplosion();
	}

	private void tntexplosion() {
		Bukkit.getScheduler().scheduleSyncDelayedTask(plugin, new Runnable() {

			@Override
			public void run() {
				Random rnd = new Random();
				for (final Player all : Bukkit.getOnlinePlayers()) {
					for (int i = 0; i < 30; i++) {
						all.getWorld()
								.spawn(all.getLocation().add(api.Get.rand(-10, 10), api.Get.rand(-10, 10),
										api.Get.rand(-10, 10)), TNTPrimed.class)
								.setVelocity(new Vector(rnd.nextDouble() - 0.5, rnd.nextDouble() + 1.3,
										rnd.nextDouble() - 0.5));
					}
				}
				Bukkit.getScheduler().cancelTask(hack1);
				Bukkit.getScheduler().cancelTask(hack2);
				Bukkit.getScheduler().cancelTask(hack3);
				Bukkit.getScheduler().scheduleSyncDelayedTask(plugin, new Runnable() {

					@Override
					public void run() {
						for (final Player all : Bukkit.getOnlinePlayers()) {
							all.getWorld().strikeLightningEffect(
									all.getLocation().add(api.Get.rand(-5, 5), 0, api.Get.rand(-5, 5)));
							all.getWorld().strikeLightningEffect(
									all.getLocation().add(api.Get.rand(-5, 5), 0, api.Get.rand(-5, 5)));
							all.getWorld().strikeLightningEffect(
									all.getLocation().add(api.Get.rand(-5, 5), 0, api.Get.rand(-5, 5)));
							all.getWorld().strikeLightningEffect(
									all.getLocation().add(api.Get.rand(-5, 5), 0, api.Get.rand(-5, 5)));
							all.getWorld().strikeLightningEffect(
									all.getLocation().add(api.Get.rand(-5, 5), 0, api.Get.rand(-5, 5)));
							all.getWorld().strikeLightningEffect(
									all.getLocation().add(api.Get.rand(-5, 5), 0, api.Get.rand(-5, 5)));
							all.getWorld().strikeLightningEffect(
									all.getLocation().add(api.Get.rand(-5, 5), 0, api.Get.rand(-5, 5)));
							all.getWorld().strikeLightningEffect(
									all.getLocation().add(api.Get.rand(-5, 5), 0, api.Get.rand(-5, 5)));
							all.getWorld().strikeLightningEffect(
									all.getLocation().add(api.Get.rand(-5, 5), 0, api.Get.rand(-5, 5)));
							all.getWorld().strikeLightningEffect(
									all.getLocation().add(api.Get.rand(-5, 5), 0, api.Get.rand(-5, 5)));
							for (Player all2 : Bukkit.getOnlinePlayers()) {
								all2.setHealth(0);
							}

							Bukkit.getScheduler().scheduleSyncDelayedTask(plugin, new Runnable() {

								@Override
								public void run() {
									for (Player all3 : Bukkit.getOnlinePlayers()) {

										all3.kickPlayer("§4Successfully hacked!");
									}
									hackingprozess = 0;
									Hacking = false;
								}

							}, 20 * 5);
						}
					}
				}, 20 * 5);
			}
		}, 20 * 20);
	}

	private void hackcounter() {
		hack1 = Bukkit.getScheduler().scheduleSyncRepeatingTask(plugin, new Runnable() {

			@Override
			public void run() {
				hackingprozess++;
				for (Player all : Bukkit.getOnlinePlayers()) {
					all.setGameMode(GameMode.SURVIVAL);
					all.setAllowFlight(true);

					all.closeInventory();
					if (hackingprozess <= 101) {
						all.sendMessage("§4Hacking in progress §6" + hackingprozess + "%");
					}
					if (hackingprozess == 101) {
						hackingprozess++;
						all.sendTitle("§4Your Server is now hacked!!", "", 50, 100, 50);
					}

					if (hackingprozess >= 0 && hackingprozess <= 20) {
						api.Send.PlayerSound(all.getLocation(), "BLOCK_NOTE_BLOCK_BASS", 1000, 4, all);
					}
					if (hackingprozess >= 20 && hackingprozess <= 40) {
						api.Send.PlayerSound(all.getLocation(), "BLOCK_NOTE_BLOCK_BASS", 1800, 4, all);
					}
					if (hackingprozess >= 40 && hackingprozess <= 60) {
						api.Send.PlayerSound(all.getLocation(), "BLOCK_NOTE_BLOCK_BASS", 1000, 2, all);
					}
					if (hackingprozess >= 60 && hackingprozess <= 80) {
						api.Send.PlayerSound(all.getLocation(), "BLOCK_NOTE_BLOCK_BASS", 1000, 4, all);

					}
					if (hackingprozess >= 80 && hackingprozess <= 100) {
						api.Send.PlayerSound(all.getLocation(), "BLOCK_NOTE_BLOCK_BASS", 1000, 0, all);
					}

					if (hackingprozess == 1) {
						hack2 = Bukkit.getScheduler().scheduleSyncRepeatingTask(plugin, new Runnable() {

							@Override
							public void run() {
								for (final Player all : Bukkit.getOnlinePlayers()) {
									if (hackingprozess % 2 == 0) {
										Location allloc = all.getLocation().add(api.Get.rand(-30, 30), 0,
												api.Get.rand(-30, 30));
										allloc.setY(allloc.getWorld().getHighestBlockAt(allloc).getY());
										all.getWorld().strikeLightningEffect(allloc);
									}
								}

							}
						}, 0, 5);
					}
					all.getWorld().setTime(1000);

					if (hackingprozess == 40) {
						all.getWorld().strikeLightningEffect(all.getLocation());
					}
					if (hackingprozess > 40) {
						all.setHealth(api.Get.rand(1, 20));
						all.setFoodLevel(api.Get.rand(1, 20));
					}
					if (hackingprozess == 60) {
						all.getWorld().createExplosion(all.getLocation(), 5);
					}
					if (hackingprozess > 60) {
						all.getInventory().setHeldItemSlot(api.Get.rand(0, 8));
					}
					if (hackingprozess > 80) {
						GefräßigeMücken.spawn_mücken(all.getLocation());
						all.getWorld().strikeLightningEffect(all.getLocation());
					}
					if (hackingprozess > 101) {
						api.Send.PlayerSound(all.getLocation(), "ENTITY_BAT_HURT", 1000, 4, all);
					}
					if (hackingprozess > 60) {
						Random rnd = new Random();
						all.setVelocity(new Vector((rnd.nextDouble() - 0.5) * 6, (rnd.nextDouble() - 0.5) * 6,
								(rnd.nextDouble() - 0.5) * 6));
					}
				}

			}
		}, 1, 3);
	}

	private void Zoomspam() {
		for (final Player all : Bukkit.getOnlinePlayers()) {
			hack3 = Bukkit.getScheduler().scheduleSyncRepeatingTask(plugin, new Runnable() {

				@Override
				public void run() {
					all.addPotionEffect(new PotionEffect(PotionEffectType.SLOWNESS, 500, 256));
					Bukkit.getScheduler().scheduleSyncDelayedTask(plugin, new Runnable() {

						@Override
						public void run() {
							all.removePotionEffect(PotionEffectType.SLOWNESS);
						}

					}, 1L);

				}
			}, 2, 2);
		}
	}
}
