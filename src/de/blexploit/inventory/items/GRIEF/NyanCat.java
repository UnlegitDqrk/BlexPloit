package de.blexploit.inventory.items.GRIEF;

import org.bukkit.Bukkit;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.entity.EntityType;
import org.bukkit.entity.Ocelot;
import org.bukkit.entity.Ocelot.Type;
import org.bukkit.entity.Player;
import org.bukkit.util.Vector;

import api.ParticleEffect;
import de.blexploit.Start;
import de.blexploit.inventory.creator.Bereich;
import de.blexploit.inventory.creator.InvItem;
import de.blexploit.players.create.MittrollerEntity;

public final class NyanCat extends InvItem {

	public NyanCat() {
		super("Nyan Cat", "REGENBOGEN!", Material.POTATO_ITEM, 0, Bereich.GRIEFING, false);
	}

	// private final Float f0 = 0.5F;
	// private final Float f1 = 0.53F;
	// private final Float f2 = 0.56F;
	// private final Float f3 = 0.6F;
	// private final Float f4 = 0.63F;
	private final Float f5 = 0.67F;
	// private final Float f6 = 0.7F;
	private final Float f7 = 0.76F;
	private final Float f8 = 0.8F;
	private final Float f9 = 0.84F;
	private final Float f10 = 0.9F;
	// private final Float f11 = 0.94F;
	private final Float f12 = 1.0F;
	// private final Float f13 = 1.06F;
	private final Float f14 = 1.12F;
	// private final Float f15 = 1.18F;
	private final Float f16 = 1.26F;
	private final Float f17 = 1.34F;
	// private final Float f18 = 1.42F;
	private final Float f19 = 1.5F;
	// private final Float f20 = 1.6F;
	private final Float f21 = 1.68F;
	private final Float f22 = 1.78F;
	// private final Float f23 = 1.88F;
	private final Float f24 = 2.0F;

	@Override
	public void right_click(MittrollerEntity mt) {
		this.spielerInfo(mt, "erschaffte eine §l§cN§6Y§5A§9N §aC§bA§dT");
		Player p = mt.getPlayer();
		Ocelot cat = (Ocelot) p.getWorld().spawnEntity(api.Get.targetLoc(p).add(0, 12, -80), EntityType.OCELOT);
		cat.setCustomName("§l§cN§6Y§5A§9N §aC§bA§dT");
		cat.setCatType(Type.BLACK_CAT);
		api.Godmode.add(cat);
		waiter = 0;
		String np = "BLOCK_NOTE_PLING";
		String sd = "BLOCK_NOTE_SNARE";
		String bg = "BLOCK_NOTE_BASEDRUM";
		playsound(true, cat, np, f9); // 73
		playsound(true, cat, sd, f17);
		playsound(true, cat, np, f10);
		playsound(true, cat, np, f12);
		playsound(false, cat, np, f12);
		playsound(true, cat, np, f17);
		playsound(true, cat, sd, f17);
		playsound(false, cat, np, f17);
		playsound(true, cat, np, f9);
		playsound(true, cat, np, f10);
		playsound(true, cat, np, f12);
		playsound(true, cat, sd, f17);
		playsound(true, cat, np, f17);
		playsound(true, cat, np, f19);
		playsound(true, cat, np, f21);
		playsound(true, cat, np, f19);
		playsound(true, cat, sd, f17);
		playsound(true, cat, np, f16);
		playsound(true, cat, np, f17);
		playsound(false, cat, np, f17);
		playsound(true, cat, np, f12);
		playsound(true, cat, sd, f17);
		playsound(false, cat, np, f17);
		playsound(true, cat, np, f9);
		playsound(true, cat, np, f10); // 2sec.
		playsound(true, cat, np, f12);
		playsound(true, cat, sd, f17);
		playsound(false, cat, np, f17);
		playsound(true, cat, np, f17);
		playsound(false, cat, np, f17);
		playsound(true, cat, np, f19);
		playsound(true, cat, sd, f17);
		playsound(true, cat, np, f16);
		playsound(true, cat, np, f17);
		playsound(true, cat, np, f19);
		playsound(true, cat, np, f22);
		playsound(true, cat, sd, f17);
		playsound(true, cat, np, f21);
		playsound(true, cat, np, f22);
		playsound(true, cat, np, f19); // Bass change

		for (int i = 0; i < 1; i++) {
			playsound(true, cat, np, f12);
			playsound(true, cat, bg, f10);
			playsound(false, cat, np, f10);
			playsound(true, cat, np, f14);
			playsound(true, cat, bg, f22);
			playsound(false, cat, np, f10);
			playsound(true, cat, np, f9);
			playsound(true, cat, bg, f12);
			playsound(true, cat, np, f9);
			playsound(false, cat, np, f9);
			playsound(true, cat, bg, f24);
			playsound(true, cat, np, f5);
			playsound(true, cat, np, f8);
			playsound(true, cat, bg, f9);
			playsound(true, cat, np, f7);
			playsound(true, cat, np, f5);
			playsound(true, cat, bg, f21);
			playsound(false, cat, bg, f21);
			playsound(true, cat, np, f5);
			playsound(true, cat, bg, f14);
			playsound(false, cat, np, f9);
			playsound(true, cat, np, f7);
			playsound(true, cat, bg, f14);
			playsound(false, cat, np, f9);
			playsound(true, cat, np, f8);
			playsound(true, cat, bg, f7);
			playsound(false, cat, np, f9);
			playsound(true, cat, np, f8);
			playsound(true, cat, bg, f19);
			playsound(true, cat, np, f7);
			playsound(true, cat, np, f5);
			playsound(true, cat, bg, f12);
			playsound(true, cat, np, f7);
			playsound(true, cat, np, f9);
			playsound(true, cat, bg, f24);
			playsound(true, cat, np, f12);
			playsound(true, cat, np, f14);
			playsound(true, cat, bg, f5);
			playsound(true, cat, np, f9);
			playsound(true, cat, np, f12);
			playsound(true, cat, bg, f17);
			playsound(true, cat, np, f7);
			playsound(true, cat, np, f9);
			playsound(true, cat, bg, f5);
			playsound(true, cat, np, f5);
			playsound(true, cat, np, f7);
			playsound(true, cat, bg, f17);
			playsound(true, cat, np, f5);
			playsound(true, cat, np, f9);
			playsound(true, cat, bg, f10);
			playsound(false, cat, bg, f10);

			playsound(true, cat, np, f12);
			playsound(true, cat, bg, f22);
			playsound(false, cat, np, f8);
			playsound(true, cat, np, f14);
			playsound(true, cat, bg, f7);
			playsound(true, cat, np, f9);
			playsound(true, cat, np, f12);
			playsound(true, cat, bg, f19);
			playsound(true, cat, np, f7);
			playsound(true, cat, np, f9);
			playsound(true, cat, bg, f9);
			playsound(true, cat, np, f5);
			playsound(true, cat, np, f8);
			playsound(true, cat, bg, f21);
			playsound(true, cat, np, f9);
			playsound(true, cat, np, f8);
			playsound(true, cat, bg, f14);
			playsound(true, cat, np, f7);
			playsound(true, cat, np, f5);
			playsound(true, cat, bg, f14);
			playsound(true, cat, np, f7);
			playsound(true, cat, np, f8);
			playsound(true, cat, bg, f7);
			playsound(false, cat, np, f8);
			playsound(true, cat, np, f5);
			playsound(true, cat, bg, f19);
			playsound(true, cat, np, f7);
			playsound(true, cat, np, f9);
			playsound(true, cat, bg, f12);
			playsound(true, cat, np, f12);
			playsound(true, cat, np, f7);
			playsound(true, cat, bg, f24);
			playsound(true, cat, np, f9);
			playsound(true, cat, np, f7);
			playsound(true, cat, bg, f5);
			playsound(true, cat, np, f5);
			playsound(true, cat, np, f7);
			playsound(true, cat, bg, f17);
			playsound(false, cat, np, f8);
			playsound(true, cat, np, f5);
			playsound(true, cat, bg, f5);
			playsound(false, cat, np, f8);
			playsound(true, cat, np, f7);
			playsound(true, cat, bg, f17);
			playsound(true, cat, "ENTITY_GENERIC_EXPLODE", f8); // BOOM!!
			playsound(false, cat, np, f8);
		}

	}

	private int waiter = 0;

	private void playsound(boolean starter, final Ocelot cat, final String s, final Float f) {
		try {
			if (starter == true) {
				if (s.equals("BLOCK_NOTE_SNARE") || s.equals("BLOCK_NOTE_BASEDRUM")) {
					waiter = waiter - 2;
				}
				Bukkit.getScheduler().scheduleSyncDelayedTask(Start.instance, new Runnable() {
					@Override
					public void run() {
						Location loc = cat.getLocation();
						ParticleEffect.REDSTONE.display(0.04F, 0.04F, 0.4F, 4, 100, loc, 700);
						if (s.equals("ENTITY_GENERIC_EXPLODE")) {
							cat.getWorld().createExplosion(cat.getLocation(), 5, true);
							ParticleEffect.REDSTONE.display(5F, 5F, 5F, 40, 1000, loc, 700);
							cat.remove();
							return;
						}
						cat.setVelocity(new Vector(0, 0.01, 0.47));
						api.Send.OnlinePlayersSound(s, loc, 10, f);
					}
				}, waiter);
				waiter = waiter + 2;
			} else
				waiter = waiter + 2;
			return;
		} catch (Exception e) {
		}

	}

}
