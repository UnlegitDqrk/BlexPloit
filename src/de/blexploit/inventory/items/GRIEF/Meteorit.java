package de.blexploit.inventory.items.GRIEF;

import java.util.ArrayList;

import org.bukkit.Bukkit;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.entity.Entity;
import org.bukkit.entity.FallingBlock;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.EntityChangeBlockEvent;
import org.bukkit.plugin.Plugin;
import org.bukkit.util.Vector;

import de.blexploit.Start;
import de.blexploit.inventory.creator.Bereich;
import de.blexploit.inventory.creator.InvItem;
import de.blexploit.players.create.MittrollerEntity;

public final class Meteorit extends InvItem implements Listener {
	private ArrayList<Entity> fb_list = new ArrayList<Entity>();
	private final Plugin pl = Start.instance;
	private int shedule_sound;

	public Meteorit() {
		super("Meteorite", "Erschafft einen großen Meteorit", Material.SULPHUR, 0, Bereich.GRIEFING, false);
	}

	@Override
	public void right_click(MittrollerEntity mt) {
		if (fb_list.size() != 0) {
			mt.sendMessage("§c Bitte warte kurz, bis sich ein neuer Meteorite in der Umlaufbahn befindet!");
			return;
		}
		this.spielerInfo(mt, "ist ziemlich anziehend.");
		Location loc = api.Get.targetLoc(mt.getPlayer()).add(0, 50, 0);
		falb(loc.add(-50, 0, 0), 7, (byte) 0);
		sound();
	}

	private void sound() {
		Bukkit.getScheduler().cancelTask(this.shedule_sound);
		this.shedule_sound = Bukkit.getScheduler().scheduleSyncRepeatingTask(pl, new Runnable() {

			@Override
			public void run() {
				if (fb_list.size() != 0) {
					Entity et = fb_list.get(0);
					if (et != null) {
						if (et.isDead() == false) {
							api.Send.OnlinePlayersSound("ENTITY_WITHER_SHOOT", et.getLocation(), 20, 0);
						}
					}

				} else {
					Bukkit.getScheduler().cancelTask(shedule_sound);
					return;
				}

			}
		}, 0, 1);
	}

	@SuppressWarnings("deprecation")
	private void falb(Location loc, int id, byte byt) {
		for (Location loc2 : api.Get.sphere_loc(loc, 6, true)) {
			int random = api.Get.rand(0, 6);
			int blockid = 0;
			switch (random) {
			case 0:
				blockid = 7;
				break;
			case 1:
				blockid = 49;
				break;
			case 2:
				blockid = 89;
				break;
			case 3:
				blockid = 49;
				break;
			case 4:
				blockid = 7;
				break;
			case 5:
				blockid = 152;
				break;
			case 6:
				blockid = 49;
				break;

			default:
				break;
			}
			FallingBlock fb = (FallingBlock) loc2.getWorld().spawnFallingBlock(loc2, blockid, (byte) 0);
			fb.setVelocity(new Vector(1.5, 0, 0));
			fb_list.add(fb);
		}
	}

	private int zähler = 0;

	@EventHandler
	private void onBlockChange(EntityChangeBlockEvent e) {
		if (fb_list.contains(e.getEntity())) {
			Bukkit.getScheduler().cancelTask(shedule_sound);
			zähler++;
			fb_list.remove(e.getEntity());
			if ((zähler % 4) == 0) {
				e.getEntity().getWorld().createExplosion(e.getEntity().getLocation(), 5, true);
			}
			e.setCancelled(true);
			delay_clear();
		}

	}

	private void delay_clear() {
		Bukkit.getScheduler().scheduleSyncDelayedTask(pl, new Runnable() {

			@Override
			public void run() {
				fb_list.clear();

			}
		}, 20);
	}
}
