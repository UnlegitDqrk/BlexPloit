package de.blexploit.inventory.items.GRIEF.Schaumschläger;

import java.util.Random;

import org.bukkit.Location;

import org.bukkit.Material;
import org.bukkit.entity.Entity;

public final class Spawner {

	public Location loc;

	public boolean shouldSpawn = false;

	public int countdown = 15;

	public boolean spawnNext = true;

	public Spawner(Location location, boolean first) {
		this.loc = location;
		countdown = 15;
		if (Thread.canSpawn) {
			Thread.schläger.add(this);
		} else {
			Thread.schlägerNeu.add(this);
		}
		if (!first) {
			buildPenis();
		}
	}

	public Location getLocation() {
		return loc;
	}

	@SuppressWarnings("deprecation")
	public void buildPenis() {
		int n = getRandom(0, 1);
		if (n == 0) {
			getLocation().getWorld().spawnFallingBlock(new Location(getLocation().getWorld(), getLocation().getBlockX(),
					150 + 6, getLocation().getBlockZ()), Material.WHITE_WOOL, (byte) 6);
			getLocation().getWorld().spawnFallingBlock(new Location(getLocation().getWorld(), getLocation().getBlockX(),
					150 + 4, getLocation().getBlockZ()), Material.CLAY, (byte) 0);
			getLocation().getWorld().spawnFallingBlock(new Location(getLocation().getWorld(), getLocation().getBlockX(),
					150 + 1, getLocation().getBlockZ()), Material.CLAY, (byte) 0);
			getLocation().getWorld().spawnFallingBlock(
					new Location(getLocation().getWorld(), getLocation().getBlockX(), 150, getLocation().getBlockZ()),
					Material.CLAY, (byte) 0);
			getLocation().getWorld().spawnFallingBlock(new Location(getLocation().getWorld(),
					getLocation().getBlockX() - 1, 150, getLocation().getBlockZ()), Material.CLAY, (byte) 0);
			Entity e = getLocation().getWorld().spawnFallingBlock(new Location(getLocation().getWorld(),
					getLocation().getBlockX() + 1, 150, getLocation().getBlockZ()), Material.CLAY, (byte) 0);
			SchaumschlägerInvItem.sound.add(e);

		} else {
			getLocation().getWorld().spawnFallingBlock(new Location(getLocation().getWorld(), getLocation().getBlockX(),
					150 + 6, getLocation().getBlockZ()), Material.WHITE_WOOL, (byte) 6);
			getLocation().getWorld().spawnFallingBlock(new Location(getLocation().getWorld(), getLocation().getBlockX(),
					150 + 4, getLocation().getBlockZ()), Material.CLAY, (byte) 0);
			getLocation().getWorld().spawnFallingBlock(new Location(getLocation().getWorld(), getLocation().getBlockX(),
					150 + 1, getLocation().getBlockZ()), Material.CLAY, (byte) 0);
			getLocation().getWorld().spawnFallingBlock(
					new Location(getLocation().getWorld(), getLocation().getBlockX(), 150, getLocation().getBlockZ()),
					Material.CLAY, (byte) 0);
			getLocation().getWorld().spawnFallingBlock(new Location(getLocation().getWorld(), getLocation().getBlockX(),
					150, getLocation().getBlockZ() + 1), Material.CLAY, (byte) 0);
			Entity e = getLocation().getWorld().spawnFallingBlock(new Location(getLocation().getWorld(),
					getLocation().getBlockX(), 150, getLocation().getBlockZ() - 1), Material.CLAY, (byte) 0);
			SchaumschlägerInvItem.sound.add(e);
		}
		getLocation().getWorld().spawnFallingBlock(new Location(getLocation().getWorld(),
				getLocation().getBlockX() + getRandom(-3, 3), 150 + 10, getLocation().getBlockZ() + getRandom(-3, 3)),
				Material.COBWEB, (byte) 0);
		getLocation().getWorld().spawnFallingBlock(new Location(getLocation().getWorld(),
				getLocation().getBlockX() + getRandom(-3, 3), 150 + 10, getLocation().getBlockZ() + getRandom(-3, 3)),
				Material.COBWEB, (byte) 0);
	}

	public void createNext() {
		if (spawnNext) {
			int x = getRandom(-50, 50), z = getRandom(-50, 50);
			Location newLoc = getLocation();
			for (int i = 256; i >= 1; i--) {
				newLoc = new Location(newLoc.getWorld(), getLocation().getBlockX() + x, i,
						getLocation().getBlockZ() + z);
				if (newLoc.getBlock() != null && newLoc.getBlock().getType() != Material.AIR) {
					break;
				}
			}
			if (newLoc != null) {
				new Spawner(newLoc.add(0, 4, 0), false);
			}
		}
	}

	public static int getRandom(int lower, int upper) {
		Random random = new Random();
		return random.nextInt((upper - lower) + 1) + lower;
	}

}
