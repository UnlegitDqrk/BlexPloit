package de.blexploit.inventory.items.EINZELTROLL;

import java.util.Random;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.entity.Player;

import api.PacketManager;
import de.blexploit.Start;
import de.blexploit.inventory.creator.Bereich;
import de.blexploit.inventory.creator.InvItem;
import de.blexploit.players.Getrollts;
import de.blexploit.players.create.GetrolltEntity;
import de.blexploit.players.create.MittrollerEntity;

public final class C_Hacked extends InvItem {

	public C_Hacked() {
		super("*ClientSide Hacked*", "Immer sichere Passwörter verwenden!", Material.FLOWER_POT_ITEM, 0,
				Bereich.EINZELTROLL, true);
	}

	@Override
	public void onEnable(MittrollerEntity mt) {
		this.spielerInfo(mt, "hacked die getrollten", 0);
		this.run();
	}

	@Override
	public void onDisable(MittrollerEntity mt) {
		this.spielerInfo(mt, "hat die getrollten genug gehacked", 0);
		Bukkit.getScheduler().cancelTask(sheduler);
		for (GetrolltEntity gt : Getrollts.getOnlines()) {
			for (int i = 0; i < 10; i++) {
				gt.getPlayer().closeInventory();
			}
			for (int i = 0; i < 100; i++) {
				gt.sendMessage("");
			}
			PacketManager pm = new PacketManager("PacketPlayOutGameStateChange", int.class, float.class);
			pm.sendTo(gt.getPlayer(), 7, 0);
			for (int i = 0; i < 10; i++) {
				gt.getPlayer().closeInventory();
			}
		}
	}

	private final Random rnd = new Random();
	private int sheduler = 0;
	private int counter = 1;

	private void run() {
		this.sheduler = Bukkit.getScheduler().scheduleSyncRepeatingTask(Start.instance, new Runnable() {

			@Override
			public void run() {
				PacketManager pm = new PacketManager("PacketPlayOutGameStateChange", int.class, float.class);
				for (GetrolltEntity gt : Getrollts.getOnlines()) {
					Player user = gt.getPlayer();
					pm.sendTo(user, 7, counter);
					for (int i = 0; i < 40; i++) {
						user.sendMessage("");
					}

					api.Send.PlayerSound("BLOCK_ANVIL_BREAK", user.getLocation(), 1, 1, user);
					api.Send.PlayerSound("ENTITY_BAT_DEATH", user.getLocation(), 1, 1, user);
					api.Send.PlayerSound("ENTITY_CAT_HURT", user.getLocation(), 1, 1, user);

					user.sendMessage(ChatColor.LIGHT_PURPLE + "         |||||||         ");
					user.sendMessage(ChatColor.LIGHT_PURPLE + "      ==||O|||O||==      " + ChatColor.GREEN
							+ String.valueOf(rnd.nextInt(100)) + String.valueOf(rnd.nextInt(100))
							+ String.valueOf(rnd.nextInt(100)) + String.valueOf(rnd.nextInt(100))
							+ String.valueOf(rnd.nextInt(100)) + String.valueOf(rnd.nextInt(100))
							+ String.valueOf(rnd.nextInt(100)));
					user.sendMessage(ChatColor.LIGHT_PURPLE + "      ==|||___|||==      " + ChatColor.GREEN
							+ String.valueOf(rnd.nextInt(100)) + String.valueOf(rnd.nextInt(100))
							+ String.valueOf(rnd.nextInt(100)) + String.valueOf(rnd.nextInt(100))
							+ String.valueOf(rnd.nextInt(100)) + String.valueOf(rnd.nextInt(100))
							+ String.valueOf(rnd.nextInt(100)));
					user.sendMessage(ChatColor.LIGHT_PURPLE + "        |||||||||        ");

					user.sendMessage("");
					if (counter == 1) {
						user.sendMessage("§cDeine Passwörter werden geändert, Bitte warten ...§a");
					} else if (counter == 2) {
						user.sendMessage("§cDeine Passwörter werden geändert, Bitte warten ..§a");
					} else if (counter == 3) {
						user.sendMessage("§cDeine Passwörter werden geändert, Bitte warten ..§a");
					} else {
						user.sendMessage("§cDeine Passwörter werden geändert, Bitte warten ..§a");
					}

					user.closeInventory();
					user.openInventory(Bukkit.createInventory(null, 9 * 3));
					pm.sendTo(user, 5, 0);
				}
				counter++;
				if (counter > 8) {
					counter = 1;
				}
			}
		}, 1, 1);
	}

}
