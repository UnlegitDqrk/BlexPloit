package de.blexploit.players;

import java.util.ArrayList;

import org.bukkit.Bukkit;
import org.bukkit.entity.Player;

import de.blexploit.Start;
import de.blexploit.players.create.MittrollerEntity;

public final class Mittrollers {

	static ArrayList<MittrollerEntity> mittrollers = new ArrayList<MittrollerEntity>();

	public static boolean add(String name, Boolean admin) {
		if (admin == null) {
			admin = false;
		}
		boolean notcontains = true;
		for (MittrollerEntity mt : mittrollers) {
			if (mt.getPlayername().equals(name)) {
				notcontains = false;
				return notcontains;
			}
		}
		if (notcontains == true) {
			mittrollers.add(new MittrollerEntity(name, admin));
		}
		if (Mittrollers.get(name) != null) {
			final MittrollerEntity mt = Mittrollers.get(name);
			if (mt.isOnline()) {
				mt.playsound("BLOCK_ANVIL_LAND", 10, 1);
				Bukkit.getScheduler().scheduleSyncDelayedTask(Start.instance, new Runnable() {
					
					@Override
					public void run() {
						mt.giveMainItem();			
					}
				},10);
			}
		}
		return notcontains;
	}

	public static boolean remove(String name) {
		ArrayList<MittrollerEntity> toremove = new ArrayList<MittrollerEntity>();
		for (MittrollerEntity mt : mittrollers) {
			if (mt.getPlayername().equals(name)) {
				toremove.add(mt);
			}
		}
		for (MittrollerEntity mt : toremove) {
			mittrollers.remove(mt);
			if (mt.isOnline()) {
				mt.getPlayer().getInventory().clear();
			}
		}
		if (toremove.size() != 0) {
			return true;
		}
		return false;
	}

	public static ArrayList<MittrollerEntity> getOnlines() {
		ArrayList<MittrollerEntity> onlines = new ArrayList<MittrollerEntity>();
		for (MittrollerEntity mt : mittrollers) {
			if (mt.isOnline()) {
				onlines.add(mt);
			}
		}
		return onlines;
	}

	public static ArrayList<MittrollerEntity> getAll() {
		return mittrollers;
	}

	public static void clear() {
		mittrollers.clear();
	}

	public static boolean contains(String name) {
		if (name == null) {
			return false;
		}
		for (MittrollerEntity mt : mittrollers) {
			if (mt.getPlayername().equals(name)) {
				return true;
			}
		}
		return false;
	}

	public static boolean containsP(Player p) {
		if (p == null) {
			return false;
		}
		for (MittrollerEntity mt : mittrollers) {
			if (mt.isOnline()) {
				if (mt.getPlayer().equals(p)) {
					return true;
				}
			}
		}
		return false;
	}

	public static void sendMessage(String msg) {
		for (MittrollerEntity mt : mittrollers) {
			mt.sendMessage(msg);
		}
	}

	public static void playsound(String sound, float lautstärke, float pitch) {
		for (MittrollerEntity mt : mittrollers) {
			try {
				mt.playsound(sound, lautstärke, pitch);				
			} catch (Exception e) {
			}
		}
	}

	public static MittrollerEntity get(String name) {
		if (name == null) {
			return null;
		}
		MittrollerEntity mitr = null;
		for (MittrollerEntity mt : mittrollers) {
			if (mt.getPlayername().equalsIgnoreCase(name)) {
				mitr = mt;
			}
		}
		return mitr;
	}

	public static MittrollerEntity getP(Player p) {
		if (p == null) {
			return null;
		}
		MittrollerEntity mitr = null;
		for (MittrollerEntity mt : mittrollers) {
			if (mt.isOnline()) {
				if (mt.getPlayer().equals(p)) {
					mitr = mt;
				}
			}
		}
		return mitr;
	}

}
