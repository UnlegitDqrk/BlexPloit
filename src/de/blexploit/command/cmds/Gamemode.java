package de.blexploit.command.cmds;

import org.bukkit.ChatColor;
import org.bukkit.GameMode;
import org.bukkit.entity.Player;

import api.Fehler;
import de.blexploit.command.Command;
import de.blexploit.manager.TabManager;
import de.blexploit.players.create.MittrollerEntity;

public final class Gamemode extends Command {

	public Gamemode() {
		super("gamemode", "Ändere deinen Spielmodus", gameModes(), TabManager.INSERT_PLAYERNAME);
	}

	private static String gameModes() {
		String gmList = "";
		for (GameMode gm : GameMode.values()) {
			if (gmList == "") {
				gmList = gm.toString();
			} else {
				gmList = gmList + "/" + gm.toString();
			}
		}
		return gmList;
	}

	@SuppressWarnings("deprecation")
	@Override
	public void run(String[] args, MittrollerEntity mt) {
		if (args.length >= 2) {
			int number = 0;
			try {
				number = Integer.parseInt(args[1]);
			} catch (NumberFormatException e) {
				GameMode gm = null;
				for (GameMode g : GameMode.values()) {
					if (g.toString().equalsIgnoreCase(args[1])) {
						gm = g;
					}
				}
				if (gm == null) {
					mt.fehler(Fehler.ARGUMENT_EXCEPTION);
					mt.benutze(this);
					return;
				}
				number = gm.getValue();
			}
			if (args.length == 2) {
				try {
					mt.setAllowGamemodeChange(true);
					mt.getPlayer().setGameMode(GameMode.getByValue(number));
					mt.setAllowGamemodeChange(false);
					mt.sendMessage("Gamemode:§c " + GameMode.getByValue(number).toString());
				} catch (Exception e) {
					mt.fehler("Dieser Gememode wurde nicht gefunden.");
				}

			} else {
				Player victim = api.Get.victim(args, 2);
				if (victim != null) {
					try {
						victim.setGameMode(GameMode.getByValue(number));
						this.SpielerInfo(mt, "setzte den Gamemode von §c" + victim.getName() + CHAT_COLOR + " auf "
								+ ChatColor.YELLOW + GameMode.getByValue(number).toString());
					} catch (Exception e) {
						mt.fehler("Dieser Gammode wurde nicht gefunden.");
					}
				} else {
					mt.fehler(Fehler.PLAYER_NOT_FOUND);
					mt.benutze(this);
				}
			}
		} else {
			mt.fehler(Fehler.ARGUMENT_EXCEPTION);
			mt.benutze(this);
		}
	}

}
