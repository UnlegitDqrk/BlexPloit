package de.blexploit.command.cmds;

import org.bukkit.ChatColor;
import org.bukkit.entity.Player;

import api.Fehler;
import de.blexploit.command.Command;
import de.blexploit.manager.TabManager;
import de.blexploit.players.Getrollts;
import de.blexploit.players.Mittrollers;
import de.blexploit.players.create.GetrolltEntity;
import de.blexploit.players.create.MittrollerEntity;

public final class Getrollt extends Command {

	public Getrollt() {
		super("getrollt", "Füge Spieler als getrollt hinzu", "add/remove/clear/list", TabManager.INSERT_PLAYERNAME);
	}

	@Override
	public void run(String[] args, MittrollerEntity mt) {
		if (args.length < 2) {
			mt.fehler(Fehler.ARGUMENT_EXCEPTION);
			mt.benutze(this);
		} else {
			switch (args[1].toLowerCase()) {
			case "add":
				this.add(args, mt);
				break;
			case "remove":
				this.remove(args, mt);
				break;
			case "list":
				this.list(mt);
				break;
			case "clear":
				this.clear(mt);
				break;
			default:
				break;
			}
		}
	}

	private void clear(MittrollerEntity mt) {
		Getrollts.clear();
		this.SpielerInfo(mt, ChatColor.GOLD + "hat alle Getrollten entfernt!");
		Mittrollers.playsound("ENTITY_CAT_PURREOW", 1, 1);
	}

	private void list(MittrollerEntity mt) {
		Player p = mt.getPlayer();
		p.sendMessage("");
		p.sendMessage("§9-----------------------------------------------------");
		mt.sendMessage(ChatColor.GOLD + "Insgesamt " + ChatColor.YELLOW + Getrollts.getAll().size() + ChatColor.GOLD
				+ " Getrollte(r):");
		int i = 0;
		for (GetrolltEntity ge : Getrollts.getAll()) {
			String s = ge.getPlayername();
			i++;
			Player online = api.Get.player(s);
			ChatColor c;
			if (online != null) {
				c = ChatColor.DARK_GREEN;
			} else {
				c = ChatColor.DARK_RED;
			}
			mt.sendMessage("§4[" + ChatColor.LIGHT_PURPLE + i + "§4] " + c + s);
		}
		p.sendMessage("§9-----------------------------------------------------");
	}

	private void remove(String[] args, MittrollerEntity mt) {
		if (mt.isAdmin() == false) {
			mt.fehler(Fehler.NO_PERMISSIONS);
			return;
		}
		if (args.length < 3) {
			mt.fehler(Fehler.ARGUMENT_EXCEPTION);
			mt.benutze(this);
			return;
		}
		Player toremove = api.Get.player(args[2]);
		if (toremove != null) {
			if (Getrollts.remove(toremove.getName())) {
				this.SpielerInfo(mt,
						"§2hat " + ChatColor.RED + args[2] + " aus den " + ChatColor.AQUA + "Getrollten §4entfernt!");
				Mittrollers.playsound("ENTITY_BLAZE_DEATH", 1, 1);
			} else {
				mt.fehler("Dieser Spieler wurde nicht Getrollt!");
			}
		} else {
			if (Getrollts.remove(args[2])) {
				this.SpielerInfo(mt,
						"§2hat " + ChatColor.RED + args[2] + " aus den " + ChatColor.AQUA + "Getrollten §4entfernt!");
			} else {
				mt.fehler("Dieser Spieler wurde nicht Getrollt!");
			}
		}
	}

	private void add(String[] args, MittrollerEntity mt) {
		if (!mt.isAdmin()) {
			mt.fehler(Fehler.NO_PERMISSIONS);
			return;
		}
		if (args.length < 3) {
			mt.fehler(Fehler.ARGUMENT_EXCEPTION);
			mt.benutze(this);
			return;
		}
		Player toadd = api.Get.player(args[2]);
		if (toadd != null) {
			if (Getrollts.add(toadd.getName())) {
				this.SpielerInfo(mt, "§2hat " + ChatColor.RED + toadd.getName() + " §2zum " + ChatColor.AQUA
						+ "Getrollten §2gemacht!");
				Mittrollers.playsound("ENTITY_BAT_HURT", 1, 1);
			} else {
				mt.fehler("Dieser Spieler wurde schon eingetragen!");
			}
		} else {
			if (Getrollts.add(args[2])) {
				this.SpielerInfo(mt,
						"§2 hat " + ChatColor.RED + args[2] + " §2zum " + ChatColor.AQUA + "Getrollten §2gemacht!");
				Mittrollers.sendMessage("§cJedoch ist dieser nicht Online!");
			} else {
				mt.fehler("Dieser Spieler wurde schon eingetragen!");
			}
		}

	}

}
